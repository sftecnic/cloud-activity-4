name: CI/CD

on:
  pull_request:
  push:
    branches: [ master ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          # Usa una versión disponible (ej: 3.10)
          python-version: "3.10"

      - name: Install Black
        run: pip install black

      - name: Check code format with Black
        run: black --check .

  test:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:alpine
        ports:
          - 6379:6379

      minio:
        image: minio/minio
        env:
          MINIO_ROOT_USER: minioadmin
          MINIO_ROOT_PASSWORD: minioadmin
        ports:
          - 9000:9000
        # Usamos "options" para especificar el entrypoint y comando de MinIO
        # En este caso, ejecutamos "minio server /data" a través de /bin/sh -c
        options: >
          --entrypoint /bin/sh
          -c "minio server /data"

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          pip install -r requirements/base.txt
          pip install pytest

      - name: Run tests
        run: pytest

  docker-publish:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          # Ajusta la etiqueta de la imagen a tu usuario/nombre de imagen
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/carlemany-backend:latest
